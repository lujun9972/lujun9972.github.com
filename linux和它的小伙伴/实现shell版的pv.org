#+TITLE: 实现shell版的pv
#+AUTHOR: lujun9972
#+TAGS: linux和它的小伙伴
#+DATE: [2019-09-27 五 17:33]
#+LANGUAGE:  zh-CN
#+STARTUP:  inlineimages
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

从 https://blogs.oracle.com/linux/solving-problems-with-proc-v2 上看到的。

pv 能够显示数据处理的进度，非常神奇。而借助 =/proc/$pid/fdinfo/$fd= 我们能够用 shell 实现类似的功能。

我们都知道在 =/proc/$pid/fd/= 中可以察看各个进程打开的文件描述符实际指向的文件，而今天我才知道，原来在 =/proc/$pid/fdinfo/= 目录下我们还能查看各个文件描述符的状态信息
#+begin_src shell :results org
  cat /proc/$(pgrep emacs)/fdinfo/*
#+end_src

这些信息的意义可以通过 =man 5 proc= 来获得，其中 =pos= 表示的是文件的偏移位置。因此我们可以实现一个简陋的pv
#+begin_src shell
  #!/bin/bash
  fd=/proc/$1/fd/$2
  fdinfo=/proc/$1/fdinfo/$2
  name=$(readlink $fd)
  size=$(wc -c $fd | awk '{print $1}')
  while [ -e $fd ]; do
      progress=$(cat $fdinfo | grep ^pos | awk '{print $2}')
      echo $((100*$progress / $size))
      sleep 1
  done | dialog --gauge "Progress reading $name" 7 100
#+end_src
