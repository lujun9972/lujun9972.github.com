#+TITLE: 既生xargs何生parallel
#+AUTHOR: lujun9972
#+TAGS: linux和它的小伙伴
#+DATE: [2020-04-01 三 12:02]
#+LANGUAGE:  zh-CN
#+STARTUP:  inlineimages
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

xargs和parallel都能并发运行多个命令，然而对这两个命令的区别一直不太清楚，直到看到了这篇文章:https://www.gnu.org/software/parallel/parallel_alternatives.html#DIFFERENCES-BETWEEN-xargs-AND-GNU-Parallel

简单的说，parallel就是增强版的xargs。

* xargs 不能很好的处理特殊字符(比如空格, \, ' 和 ")
比如下面这个例子

#+begin_src shell :results org
  touch important_file
  touch 'not important_file'
  ls not* | xargs rm              
#+end_src
会删除 =import_file=,并提示 =rm: 无法删除 'not': 没有那个文件或目录=

#+begin_src shell
  mkdir -p "My brother's 12\" records"
  ls | xargs rmdir
#+end_src
会提示 =/usr/bin/xargs: 未匹配的 单 引用；默认情况下，引用是针对 xargs 的，除非您使用了 -0 选项= 和 =rmdir: 删除 'My' 失败: 没有那个文件或目录=

#+begin_src shell
  touch 'c:\windows\system32\clfs.sys'
  echo 'c:\windows\system32\clfs.sys' | xargs ls -l
#+end_src
会提示: =ls: 无法访问 'c:windowssystem32clfs.sys': 没有那个文件或目录=

一般遇到这种情况你需要使用xargs的 =-0= 参数来指定使用 =NUL= 作为分隔符，然而这同时要求产生输入的命令的支持。

还有一种变通方案是使用 xargs 的 =-d= 选项指定使用换行符作为分隔符,比如:
#+begin_src shell
  touch 'c:\windows\system32\clfs.sys'
  touch 'not important_file'
  ls |xargs -d "\n" -n1 rm
#+end_src

* xargs 没有参数直接按CPU Core数量来并法运行任务，而必须人工指定并法度

在parallel默认依据CPU Core数量来决定并发的任务数，而且除了能通过 =-P N= 直接设定并发度外,还能通过 =-P +N=, =-P -N=, =-P N%= 来在CPU Core的数量基准进行调整(减少N个，增加N个，乘于N%)

而xargs只能通过 =-P N= 来手工设定并法度， 不过这也不是什么太大的问题，我们可以通过 =grep processor /proc/cpuinfo |wc -l= 来统计CPU的Core数量

* xargs 可能会导致输出串行
也就是可能一行输出的前半部分是一个进程的输出，而后半部分是另一个进程的输出。例如:

#+begin_src shell :results org
  slow_seq() {
      echo Count to "$@"
      seq "$@" |
          perl -ne '$|=1; for(split//){ print; select($a,$a,$a,0.100);}'
  }
  export -f slow_seq
  echo "这是期望值"
  seq 8 | xargs -n1 -P1 -I {} bash -c 'slow_seq {}'
  echo "使用parallel进行并发"
  seq 8 | parallel -P8 slow_seq {}
  echo "使用xargs进行并发"
  seq 8 | xargs -n1 -P8 -I {} bash -c 'slow_seq {}'
#+end_src

#+RESULTS:
#+begin_src org
这是期望值
Count to 1
1
Count to 2
1
2
Count to 3
1
2
3
Count to 4
1
2
3
4
Count to 5
1
2
3
4
5
Count to 6
1
2
3
4
5
6
Count to 7
1
2
3
4
5
6
7
Count to 8
1
2
3
4
5
6
7
8
使用parallel进行并发
Count to 1
1
Count to 2
1
2
Count to 3
1
2
3
Count to 4
1
2
3
4
Count to 5
1
2
3
4
5
Count to 6
1
2
3
4
5
6
Count to 7
1
2
3
4
5
6
7
Count to 8
1
2
3
4
5
6
7
8
使用xargs进行并发
Count to 1
Count to 2
Count to 3
Count to 4
11Count to 5
11Count to 6
Count to 7
1Count to 8
111







2222222






333333





44444




5555



666


77

8
#+end_src

* xargs 不支持保持多任务输出的顺序
parallel 可以通过 =-k= 或 =--keep-order= 选项来保证多任务的输出顺序与顺序执行时的顺序一直。

而xargs无此功能，也就是说任务有多行输出的话，可能导致多个任务的输出混杂在一起.

* xargs 不支持远程运行任务
parallel可以通过 =--sshlogin= 来将任务发送到远程主机上并发运行.

其他与远程运行的命令包括 =--ssh=, =--return=, =--transfer=, =--transferfile=, =--tf=, =--cleanup=, =--env=

这个能力极其恐怖，下面是摘自 =man parallel= 中的一个远程执行任务的例子:
#+begin_example
  EXAMPLE: Using remote computers
         To run commands on a remote computer SSH needs to be set
         up and you must be able to login without entering a
         password (The commands ssh-copy-id, ssh-agent, and
         sshpass may help you do that).

         If you need to login to a whole cluster, you typically do
         not want to accept the host key for every host. You want
         to accept them the first time and be warned if they are
         ever changed. To do that:

           # Add the servers to the sshloginfile
           (echo servera; echo serverb) > .parallel/my_cluster
           # Make sure .ssh/config exist
           touch .ssh/config
           cp .ssh/config .ssh/config.backup
           # Disable StrictHostKeyChecking temporarily
           (echo 'Host *'; echo StrictHostKeyChecking no) >> .ssh/config
           parallel --slf my_cluster --nonall true
           # Remove the disabling of StrictHostKeyChecking
           mv .ssh/config.backup .ssh/config

         The servers in .parallel/my_cluster are now added in
         .ssh/known_hosts.

         To run echo on server.example.com:

           seq 10 | parallel --sshlogin server.example.com echo

         To run commands on more than one remote computer run:

           seq 10 | parallel --sshlogin s1.example.com,s2.example.net echo

         Or:

           seq 10 | parallel --sshlogin server.example.com \
             --sshlogin server2.example.net echo

         If the login username is foo on server2.example.net use:

           seq 10 | parallel --sshlogin server.example.com \
             --sshlogin foo@server2.example.net echo

         If your list of hosts is server1-88.example.net with
         login foo:

           seq 10 | parallel -Sfoo@server{1..88}.example.net echo

         To distribute the commands to a list of computers, make a
         file mycomputers with all the computers:

           server.example.com
           foo@server2.example.com
           server3.example.com

         Then run:

           seq 10 | parallel --sshloginfile mycomputers echo

         To include the local computer add the special sshlogin
         ':' to the list:

           server.example.com
           foo@server2.example.com
           server3.example.com
           :

         GNU parallel will try to determine the number of CPUs on
         each of the remote computers, and run one job per CPU -
         even if the remote computers do not have the same number
         of CPUs.

         If the number of CPUs on the remote computers is not
         identified correctly the number of CPUs can be added in
         front. Here the computer has 8 CPUs.

           seq 10 | parallel --sshlogin 8/server.example.com echo
#+end_example
* xargs 不支持context替换
parallel 的 =-X= 选项可以让 ={}= 替换成命令行参数允许的最多参数值，若并发运行多个任务，则这些参数会被平均地分给每个任务，这种多参数的替换被称为context替换。例如

#+begin_src shell :results org
  seq 1 123|parallel -X -I{} echo {}
#+end_src

#+RESULTS:
#+begin_src org
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31
32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123
#+end_src

* xargs使用 -I 选项时，只能替代一个参数.
xargs的 =-I= 选项默认了 =-L 1=,也就是说每个命令行只能使用最多一行输入作为参数。

而parallel中没有这个限制
#+begin_src shell :results org
  ls |parallel -I{} -l 2 echo 
#+end_src

#+RESULTS:
#+begin_src org
安全的SSH设置.org 把archwiki搬回家.org
把Orange Pi打造成多功能下载机.org 把Orange Pi打造成影音云存储服务器.org
把Orange Pi打造成AirPlay无线音响.org 把Orange Pi打造成git服务器.org
把OrangePiLite打造成shadowsocks服务器.org 把Orange Pi Lite打造成ubuntu server.org
保护容器部署安全的一些技巧.org 保护隐私的日常方法.org
保证linux登陆密码的质量.org 被误用的svn checkout.org
编写ansible playbook的一些注意事项.org 编译linux kernel.org
不死的sed.org 查看端口占用进程的几种方法.org
查找断开的符号链接.org 查找某个文件属于哪个package的方法.org
常用的8个第三方YUM源.org 程序员使用的gedit配置.org
创建无法用cat显示的文件.org 创建Docker Swarm集群.org
创建UEFI分区时的注意事项.org 从Linux ISO文件启动计算机.org
对比本地文件与远程文件的方法.org 发现一个下载APK的好网站.org
发现一个在线体验各个Linux发行版的网站.org 给gedit加上Docker语法高亮.org
更改slack-desktop的显示图标.org 更换Linux UID.org
关闭firefox的全屏提示.org 获取系统物理地址的方法.org
既生xargs何生parallel.org 检查linux命令是否存在的正确方式.org
将视频转换成gif的方法.org 将OrangePi打造成中央日志服务器.org
将OrangePiLite打造成BT下载服务器.org 解决orangepi lite刷官网ubuntu-server 不能apt update的问题.org
禁用BEEP的方法.org 禁用Ctrl-Alt-Del重启系统.org
禁用ROOT的4种方法.org 拷贝一个文件到多个目录的几种方法.org
利用linux清空Windows登陆密码.org 连接Android手机到ArchLinux上.org
命令的执行环境.org 命令行查看GPU内存容量.org
命令行查看GPU信息.org 目录跳转神器z的实现原理和使用方法.org
排查SSH X11 Forwarding无效的步骤.org 配置SFTP Server.org
启用EPEL源并为yum操作设置代理服务器的方法.org 强制ssh使用密码认证登陆服务器.org
清空docker container logs.org 取消grep和awk的缓存.org
让你的终端雪花飞舞.org 让pacman无处不在.org
让ssh从stdin读取密码.org 如何保留命令替换结果中的换行符.org
如何保证Dockerfile每次都能产生完全相同的镜像.org 如何编写bash completion script.org
如何不使用第三方工具查看笔记本的电量还剩多少.org 如何查看打开指定文件的进程.org
如何查看进程的内存占用量.org 如何创建最小的容器镜像.org
如何多用户共享tmux session.org 如何防止意外重启Linux(基于systemd).org
如何复制文件的权限和所属关系.org 如何更改分区的UUDI.org
如何更改crontab任务结果的邮件接收人.org 如何计算umask的效果.org
如何加载linux kernel module.org 如何禁用history.org
如何禁止普通用户查看dmesg信息.org 如何判断一个进程是计算密集型还是IO密集型.org
如何让docker容器中的应用播放声音.org 如何设置容器中的时区.org
如何使用sudo命令来添加内容到文件中.org 如何通过shell找到SDCard的路径.org
如何退出无响应的ssh会话.org 如何向其他用户隐藏进程信息.org
如何修改新版gnome-terminal的标题.org 如何在容器中访问host中的DBus.org
如何在archlinux上安装RPM包.org 如何在Docker容器中启动D-Bus.org
如何在linux上安装新字体.org 如何在Linux上查看RAM信息.org
如何在xargs中使用自定义函数.org 如何kill一个进程组或会话.org
删除文件时发生了些什么事情.org 设置sudo的超时时间.org
十大GitHub最佳实践.org 实现shell版的pv.org
识别文件格式的那些工具.org 使用管道要注意的几个点.org
使用AIDE进行侵入检查.org 使用anacron定期执行任务.org
使用aspell检查英文拼写错误.org 使用avfs直接挂载压缩文件.org
使用bash随机更换壁纸.org 使用bash-it重新规划bash配置.org
使用blueman连接蓝牙设备.org 使用Calibre移除电子书中的DRM.org
使用CDPATH简化cd命令中的路径.org 使用chattr实现对文件属性的精细化管理.org
使用chrt修改进程调度策略及优先级.org 使用column格式化输出.org
使用cryptmount创建加密镜像保存机密文件.org 使用cryptsetup创建加密磁盘.org
使用date进行日期之间的计算.org 使用datefudge锁定测试时间.org
使用dd从png文件中分离附加数据.org 使用declare保存函数定义.org
使用dmidecode检查常见的硬件信息.org 使用DosBox运行dos游戏的简易方法.org
使用dpkg-reconfigure重新配置已安装好的应用.org 使用endlessh来保护你的ssh服务.org
使用Exodus在不同linux之前迁移应用.org 使用fbi在终端查看图片.org
使用feh快速设置桌面壁纸.org 使用ffmpeg进行视频转码，剪切，合并与调速.org
使用file命令识别磁盘文件格式.org 使用file命令识别文件字符编码格式.org
使用foremost恢复已删除文件.org 使用gbkunzip解决linux下zip文件解压乱码问题.org
使用git的一些小技巧.org 使用inotify-tools与rsync构建实时备份系统.org
使用iw连接无线网络.org 使用journalctl查看systemd日志.org
使用jq组装JSON.org 使用libreoffice批量转换文件和打印.org
使用logsave将命令输出保存起来.org 使用losetup帮你创建虚拟磁盘.org
使用lshw读取硬件信息.org 使用lynis进行linux漏洞扫描.org
使用mdadm设置RAID.org 使用mkisofs将指定目录做成ISO镜像.org
使用netctl设置无线网络.org 使用nmap进行网络发现.org
使用notify-send发送桌面通知.org 使用nslookup和nc验证email地址的有效性.org
使用parallel加速单线程程序.org 使用partclone备份磁盘分区.org
使用ping命令来探测目标主机的操作系统类型.org 使用Privoxy将Sock5代理转换成HTTP代理.org
使用redshift保护你的睡眠质量.org 使用rename批量重命名文件.org
使用rga在pdf中搜索关键字.org 使用rtcwake定时唤醒linux.org
使用scrcpy控制你的手机.org 使用shell察看OrangePi的温度.org
使用shell构建多进程的commandlinefu爬虫.org 使用shell控制OrangePi的发光二极管.org
使用shell切换触摸板的方法.org 使用shred彻底删除文件.org
使用snap在archlinux上安装skype.org 使用source命令的注意事项.org
使用ssh-key-gen清理无效的known_hosts记录.org 使用strace探索tail -f的工作机制.org
使用stress进行压力测试.org 使用tar代替cp进行拷贝.org
使用Termux把Android手机变成SSH服务器.org 使用timedatectl进行时间设置.org
使用tlp优化电池消耗.org 使用Toolbox构建容器中的开发环境(无需root权限).org
使用tput创建屏幕输出.org 使用unrar解压分片rar压缩文件.org
使用watch帮你重复执行命令.org 使用xrandr在命令行调整屏幕亮度.org
使用zdump显示不同时区的当前时间.org 使用ZSWAP改善低内存电脑的性能.org
提高libreoffice效率的小窍门.org 体验libvirt虚拟机.org
通过SSH锻炼你的bash技能.org 为什么说创建docker用户组不是个好选择.org
为什么cat命令查看文件不会修改atime.org 为Archlinux安装Android双启动.org
为history加上时间戳.org 为Linux安装杀毒软件.org
为OpenSSH开启双因素认证.org 为urxvt设置背景图片.org
我的linux终端工具.org 我所不知道的printf命令特性.org
误删除dev下特殊文件怎么办.org 小指头的妙用.org
修复passwd:Authentication token manipulation error的步骤.org 一个分析正则表达式的好网站.org
一个显示中文格言的fortune文件.org 一个学习SQL的网站.org
一行命令把OrangePi打造成文件云服务器.org 一行命令实现url decode.org
用mpg123播放https_url_mp3.org 用Termux模拟Ubuntu.org
运行tail|grep后按下Ctrl-C的过程中发生了什么.org 在容器中运行Linux版百度云盘客户端.org
在容器中运行Linux版QQ.org 在archlinux安装配置VNC Server.org
在Archlinux上安装和使用Tripwire IDS.org 在archlinux上安装deb包.org
在archlinux上挂载virtualbox磁盘镜像文件.org 在Archlinux上进行时钟同步.org
在Archlinux下安装和使用Skype.org 在archlinux中使用蓝牙耳机.org
在docker容器中分享敏感信息的方法.org 在Docker中运行Steam.org
在DosBox上安装windows3.2.org 在Linux上搭建UO服务器.org
在OrangePi上安装Lychee进行照片管理.org 在OrangePi上使用Docker-Compose搭建蚂蚁笔记服务器.org
在OrangePi上运行DOS程序.org 在shell中快速跳转到常用目录.org
在Termux中模拟root.org 在Ubuntu上安装RPM包.org
终端环境使用w3m访问视频站点的正确方式.org 重建CentOS或RHEL上被损坏的RPM数据库.org
尊重隐私的搜索引擎.org AIX行vi打开大文件时提示"Out of memory saving lines for undo"的解决方法.org
archlinux安装nvidia驱动.org archlinux开启指纹登陆.org
archlinux如何降级安装软件包.org archlinux使用virtualbox的几个要点.org
awesomewm配置.org AwesomeWM中的client.org
Bash挑战赛.org bash中的扩展通配符.org
Bash中的那些快捷键.org Bash中的那些有趣的内置变量.org
Bash中的keymap与bind命令.org Basic Setup and Installation of DosBox.org
bitlbee.org btrfs文件系统管理.org
cdspell帮你自动更正cd命令中的错误目录.org control.tar.gz
ctop_manage_container.org curl练习.org
data.tar.xz deb文件的格式.org
debian-binary DeDRM_tools_6.6.1.zip
DICTD:构建自己的字典服务器.org docker容器中跑GUI的最简单方法.org
docker-machine初体验.org ext4 tips三则.org
Firefox提示插件认证过期的解决方法.org Firefox一次关闭多个标签页.org
funny-manpages.org git导出排除指定文件的方法.org
git练习.org git tips之只提交文件中的某些变更.org
GLOBIGNORE变量的意义.org grub2常用命令.org
images install:增强版的cp命令.org
kgotobed让你强制早睡.org kile编译时提示 ViewPDF failed to start的解决方法.org
linux定时休眠.org Linux挂载BitLocker加密的Windows分区.org
linux内存的分配和释放.org linux如何更改网卡MAC地址.org
linux如何设置时区.org linux是如何记录日志的.org
Linux下的那些教育类软件集合.org linux下的SysRq键.org
linux下rar文件常用操作.org linux中网络相关的那些配置文件.org
linux重要日志说明.org linuxbrew让你在home目录下安装应用.org
linux IO子系统概览.org linux shell flock文件锁的用法及注意事项.org
ls对文件进行排序.org MBR与GPT分区表的简单说明.org
meminfo文件详解.org mpg123播放歌曲自动快进的解决方法.org
Newsboat：一款终端RSS阅读器.org nohup,setsid与disown的不同之处.org
numfmt:让数字变得更容易理解.org pacman中的Pac-Man.org
pamac:让你轻松管理软件包.org peek:一款简易的gif录屏软件.org
reinstall-arch.org rox-filer常用操作.org
SDCV:终端上的星际译王.org sed中的alpha到底包含哪些字符.org
shell中的那些初始化文件.org shell中如何将其他进制数转换成10进制数.org
sl-modem-daemon_2.9.11~20110321-12_i386.deb ssh端口转发说明.org
ssh使用跳板机访问远程服务器.org ssh远程执行脚本后无返回的解决方法.org
sshtron让你在终端玩的多人贪吃蛇.org termux-api让你的Termux访问手机系统功能.org
tload:字符界面上的图形化系统负载监控工具.org Tmux常用操作说明.org
Ubuntu16.04升级到18.04的步骤.org Ubuntu使用apt安装本地deb软件包.org
unzip常用方法.org urandom和random设备的区别.org
Vagrant使用指南.org w3m常用操作.org
what-is-double-slash-foo-directory.org wsl手工挂载U盘.org
xfs文件系统管理.org xterm使用简介.org
yum提示“DB_RUNRECOVERY Fatal error, run database recovery”的解决方案.org z.sh
#+end_src

* 当命令中包含复合命令，管道或IO重定向时，xargs需要将之包装在 bash -c中
在xargs中，若将命令用括号引用起来，则xargs将整个括号的内容当成是一个命令名，也就是类似于parallel中的 =-q= 选项:

所以当你执行
#+begin_src shell
  ls | xargs -d "\n"  -I {} "wc {} >{}.wc"
#+end_src
时，xargs会尝试查找一个叫做 =wc XXX>XXX.wc= 的命令，结果就是提示找不到该命令。

正确的做法是改成
#+begin_src shell
  ls | xargs -d "\n" -P8 -I {} bash -c "wc {} >{}.wc"
#+end_src
  
而使用parallel就没那么复杂了,直接用引号引起来就行了:
#+begin_src shell
  ls | parallel "wc {} >{}.wc"
#+end_src
