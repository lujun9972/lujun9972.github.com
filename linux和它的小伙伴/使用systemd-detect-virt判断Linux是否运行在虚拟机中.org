#+TITLE: 使用systemd-detect-virt判断Linux是否运行在虚拟机中
#+AUTHOR: lujun9972
#+TAGS: linux和它的小伙伴
#+DATE: [2020-08-08 六 21:37]
#+LANGUAGE:  zh-CN
#+STARTUP:  inlineimages
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

之前我一直是用 =dmidecode= 来判断Linux是否运行在虚拟环境：

在物理机上：
#+begin_src shell :dir /sudo:: :results org
  sudo dmidecode -s system-product-name
#+end_src

#+RESULTS:
#+begin_src org
2353ABU
#+end_src

在虚拟机上：
#+begin_src shell :dir /ssh:192.168.1.85|sudo:192.168.1.85: :results org
  sudo dmidecode -s system-product-name
#+end_src

#+RESULTS:
#+begin_src org
VirtualBox
#+end_src

但是它有个缺陷，就是不支持容器的检查。在容器中运行 =dmidecode= 会提示错误信息 =/dev/mem: No such file or directory=
若你把 =/dev= 挂载进容器，则又会被识别为物理急。

不过今天我发现，原来 =systemd= 已经提供了一个命令来帮你完成这项任务了，那就是 =systemd-detect-virt=.

在物理机上：
#+begin_src shell :dir /sudo:: :results org
  systemd-detect-virt;exit 0
#+end_src

#+RESULTS:
#+begin_src org
none
#+end_src

在虚拟机上：
#+begin_src shell :dir /ssh:192.168.1.85|sudo:192.168.1.85: :results org
  systemd-detect-virt;exit 0
#+end_src

#+RESULTS:
#+begin_src org
oracle
#+end_src

在容器上:
#+begin_src shell :dir /docker:a4622369efdd: :results org
  systemd-detect-virt;exit 0
#+end_src

#+RESULTS:
#+begin_src org
docker
#+end_src
