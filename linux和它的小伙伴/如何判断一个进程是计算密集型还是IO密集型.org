#+TITLE: 如何判断一个进程是计算密集型还是IO密集型
#+AUTHOR: lujun9972
#+TAGS: linux和它的小伙伴
#+DATE: [2019-09-27 五 22:52]
#+LANGUAGE:  zh-CN
#+STARTUP:  inlineimages
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

也是从 https://blogs.oracle.com/linux/solving-problems-with-proc-v2 中学到的.

一般来说计算密集型的进程会有较多的非自愿上下文切换(nonvoluntary context switch),而IO密集型的进程会有较多的自愿上下文切换(voluntary context switch).

那么如何查看某个进程遭遇到的上下文切换数量呢? 
原来在 =/proc/$PID/status= 中有 =voluntary_ctxt_switches= 和 =nonvoluntary_ctxt_switches= 两个标签分别标示了自愿上下文切换和非自愿上下文切换的次数.

比如我们来看看Emacs是计算密集型还是IO密集型呢?
#+begin_src shell :results org
  grep ctxt_switches /proc/$(pgrep emacs)/status
#+end_src

#+RESULTS:
#+begin_src org
voluntary_ctxt_switches:	74840
nonvoluntary_ctxt_switches:	21080
#+end_src

可以看到自愿上下文切换次数比较多,因此可以推测为IO密集型.
