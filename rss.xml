<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>暗无天日</title>
    <link>https://lujun9972.github.io</link>
    <description>=============&gt;DarkSun的个人博客</description>
    <pubDate>Fri, 17 Jul 2020 10:04:47 UTC</pubDate>
    <lastBuildDate>Fri, 17 Jul 2020 10:04:47 UTC</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>ego static site generator (https://github.com/emacs-china/ego)</generator>
<item>
<title>笑话理解之blow</title>
<link>https://lujun9972.github.io/blog/2020/07/17/笑话理解之blow/index.html</link>
<description>#+begin_example
  What&#39;s the difference between your paycheck and your dict?

  You don&#39;t have to beg your wife to blow your paycheck!
#+end_example

=blow= 有 =挥霍= 的意思，另一个意思 =blowjob=, 你懂得。
</description>
<pubDate>2020-07-17</pubDate>
<guid>https://lujun9972.github.io/blog/2020/07/17/笑话理解之blow/index.html</guid>
</item>
<item>
<title>笑话理解之crane</title>
<link>https://lujun9972.github.io/blog/2020/07/17/笑话理解之crane/index.html</link>
<description>* What kind of bird can carry the most weight?

#+begin_example
  What kind of bird can carry the most weight?

  The crane!
#+end_example

=crane= 即可以表示 =鹤=,也可以表示 =起重机=
</description>
<pubDate>2020-07-17</pubDate>
<guid>https://lujun9972.github.io/blog/2020/07/17/笑话理解之crane/index.html</guid>
</item>
<item>
<title>笑话理解之cum</title>
<link>https://lujun9972.github.io/blog/2020/07/17/笑话理解之cum/index.html</link>
<description>* How do you cancel an appointment at the sperm bank?
#+begin_example
  How do you cancel an appointment at the sperm bank?

  Ring up and say you cannot cum.
#+end_example

=cum= 音同 =come=, 其中一个意思是：
#+begin_example
  Cum is a vulgar slang word for the liquid that comes out of the penis during ejaculation.
  Sometimes spelled com, this is very inappropriate word.

  When a man cums, he produces cum: this word can be a noun or verb.
#+end_example
</description>
<pubDate>2020-07-17</pubDate>
<guid>https://lujun9972.github.io/blog/2020/07/17/笑话理解之cum/index.html</guid>
</item>
<item>
<title>笑话理解之honey</title>
<link>https://lujun9972.github.io/blog/2020/07/17/笑话理解之honey/index.html</link>
<description>* What did the bee say to the flower?
#+begin_example
  What did the bee say to the flower?

  Hello honey!
#+end_example

honey: =蜂蜜=, =爱人=
</description>
<pubDate>2020-07-17</pubDate>
<guid>https://lujun9972.github.io/blog/2020/07/17/笑话理解之honey/index.html</guid>
</item>
<item>
<title>笑话理解之lay</title>
<link>https://lujun9972.github.io/blog/2019/06/09/笑话理解之lay/index.html</link>
<description>* Three Nuns
#+begin_example
  Three Italian nuns die and go to heaven.

  At the Pearly Gates, they are met by St. Peter.

  He says, &quot;Sisters, you all led such exemplary lives that the Lord is granting you six months to go back to earth and be anyone you wish to be.

  The first nun says, &quot;I want to be Sophia Loren..&quot; and *poof* she&#39;s gone.

  The second says, &quot;I want to be Madonna and *poof* she&#39;s gone.

  The third says, &quot;I want to be Sara Pipalini...&quot;

  St. Peter looks perplexed, &quot;Who?&quot;

  &quot;Sara Pipalini,&quot; replies the nun.

  St Peter shakes his head and says, &quot;I&#39;m sorry, but that name just doesn&#39;t ring a bell.&quot;

  The nun then takes a newspaper out of her habit and hands it to St. Peter. St. Peter reads the paper and starts laughing. He hands it back to her and says.

  &quot;No sister, the paper says it was the &#39;Sahara Pipeline&#39; that was laid by 1,400 men in 6 months.&quot;
#+end_example

=lay= 既有 =铺设= 也有 =与...性交= 的意思。

* Why do chickens lay eggs
#+begin_example
  Why do chickens lay eggs?

  Because if they drop them they will break!
#+end_example

=lay= 既有 =下蛋= 也有 =放置，铺设= 的意思。
</description>
<pubDate>2020-07-13</pubDate>
<guid>https://lujun9972.github.io/blog/2019/06/09/笑话理解之lay/index.html</guid>
</item>
<item>
<title>笑话理解之divide与multiply</title>
<link>https://lujun9972.github.io/blog/2020/06/22/笑话理解之divide与multiply/index.html</link>
<description>#+begin_example
  One attractive young businesswoman to another over lunch: &quot;My life is all math. I am trying to add to my income, subtract from my weight, divide my time, and avoid multiplying.&quot;
#+end_example

=divide=  在数学用语中是 =除法=, 同时也有 =分割= 的意思。

=multiply= 在数学用于中是 =乘法=, 同时也有 =繁殖= 的意思。
</description>
<pubDate>2020-06-22</pubDate>
<guid>https://lujun9972.github.io/blog/2020/06/22/笑话理解之divide与multiply/index.html</guid>
</item>
<item>
<title>如何通过HTTP协议访问指定版本的SVN库内容</title>
<link>https://lujun9972.github.io/blog/2020/06/20/如何通过http协议访问指定版本的svn库内容/index.html</link>
<description>在汇总晨检报告时，有同事反馈提交的内容被覆盖了，需要从某个指定版本中取出被覆盖的内容。
然而我在跳板机上只能通过HTTP协议用浏览器访问SVN仓库，默认访问的是最新版本内容。

那么要如何通过HTTP协议访问指定版本的内容呢?经过一番搜索，在 http://beerpla.net/2010/02/20/how-to-view-a-specific-svn-revision-in-your-browser/ 找到了解决方法，于是想着记录下来。

方法其实很简单，就是在URL的仓库根后面加上 =/!svn/bc/版本号/= 即可。

比如，我们想要看 https://plugins.svn.wordpress.org/stats/trunk/readme.txt 的 100000 版本的内容，我们可以这么做：

1. 找到仓库的根URL为 https://plugins.svn.wordpress.org
2. 在仓库根URL后加上 =/!svn/bc/100000/=: https://plugins.svn.wordpress.org/!svn/bc/100000/
3. 接上后续的文件路径: https://plugins.svn.wordpress.org/!svn/bc/100000/stats/trunk/readme.txt

所以访问路径 https://plugins.svn.wordpress.org/!svn/bc/100000/stats/trunk/readme.txt 即可。

另外，若 SVN 版本操作1.6,还可以通过在 URL 后添加 ~?p=版本号~, 也即访问 https://plugins.svn.wordpress.org/stats/trunk/readme.txt?p=100000 也能起到相同的作用。
 
</description>
<pubDate>2020-06-20</pubDate>
<guid>https://lujun9972.github.io/blog/2020/06/20/如何通过http协议访问指定版本的svn库内容/index.html</guid>
</item>
<item>
<title>如何设置git push和git pull的超时时间？</title>
<link>https://lujun9972.github.io/blog/2020/06/03/如何设置git-push和git-pull的超时时间？/index.html</link>
<description>不知道为什么，最近从 github 上git push 和 git pull 的时候总是不太稳定，有时候 pull 了半天都拉不下来，然后中断后重试一次又很顺畅了。

所以我想主动设置git push 和 git pull 的超时时间，这样我可以在脚本中监测退出状态后自动进行重试，而不是死等。

目前来看，似乎 =git= 并没有一个配置项是能保证超过一段时间后一定终止退出的，只能通过 =timeout= 命令才能保证超时退出。

然而很多 UNIX 系统没有 =timeout= 命令怎么办呢？我目前只找到两个近似的解决方案，希望各位大神能提供其他的解决方法。

首先，通过  =man git-config= 我们可以发现 =http.lowSpeedLimit= 和 =http.lowSpeedTime= 这两个选项是近似满足要求的：
#+begin_example
  http.lowSpeedLimit, http.lowSpeedTime
      If the HTTP transfer speed is less than http.lowSpeedLimit for
      longer than http.lowSpeedTime seconds, the transfer is aborted. Can
      be overridden by the GIT_HTTP_LOW_SPEED_LIMIT and
      GIT_HTTP_LOW_SPEED_TIME environment variables.
#+end_example

然而这两个选项只针对 HTTP 协议生效，其他协议则需要另辟蹊径。

另一方面，既然 git 的低层是使用 ssh 协议，那么其实我们可以通过通过配置 =ssh_config= 的 =ConnectTimeout= 来设置连接服务器的超时时间。
但这个选项只针对连接服务器这个阶段生效（即创建连接，SSH 握手和密钥交换这三个阶段），之后就无法进行超时约束了。


</description>
<pubDate>2020-06-03</pubDate>
<guid>https://lujun9972.github.io/blog/2020/06/03/如何设置git-push和git-pull的超时时间？/index.html</guid>
</item>
<item>
<title>使用strace解决pacman提示无法锁定数据库的问题</title>
<link>https://lujun9972.github.io/blog/2020/05/25/使用strace解决pacman提示无法锁定数据库的问题/index.html</link>
<description>某次滚动升级archlinux的时候忘了插电，导致滚动到一半的时候断电了。导致插电后再升级时提示：
#+begin_example
  :: 正在同步软件包数据库...
  错误：无法升级 core (无法锁定数据库)
  错误：无法升级 extra (无法锁定数据库)
  错误：无法升级 community (无法锁定数据库)
  错误：无法升级 multilib (无法锁定数据库)
  错误：无法升级 archlinuxcn (无法锁定数据库)
  错误：未能成功同步所有数据库
#+end_example

从错误提示我能推测出大概率是升级到一半断电导致某个锁文件未被删除，问题是，这个锁文件在哪呢？

还好有 =strace=,可以帮我找出锁文件的路径
#+begin_src shell :results org :dir /sudo::
  sudo strace -e openat pacman -Syu --noconfirm 2&gt;&amp;1
#+end_src

#+RESULTS:
#+begin_src org
openat(AT_FDCWD, &quot;/etc/ld.so.cache&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libalpm.so.12&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libarchive.so.13&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libc.so.6&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libgpgme.so.11&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libcurl.so.4&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libcrypto.so.1.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libacl.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libexpat.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/liblzma.so.5&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libzstd.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/liblz4.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libbz2.so.1.0&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libz.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libassuan.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libgpg-error.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libnghttp2.so.14&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libidn2.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libssh2.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libpsl.so.5&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libssl.so.1.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libgssapi_krb5.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libkrb5.so.3&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libk5crypto.so.3&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libcom_err.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libpthread.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libdl.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libattr.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libunistring.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libkrb5support.so.0&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libkeyutils.so.1&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/libresolv.so.2&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/lib/locale/locale-archive&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/etc/pacman.conf&quot;, O_RDONLY) = 3
openat(AT_FDCWD, &quot;/etc/pacman.d/mirrorlist&quot;, O_RDONLY) = 4
openat(AT_FDCWD, &quot;/etc/pacman.d/mirrorlist&quot;, O_RDONLY) = 4
openat(AT_FDCWD, &quot;/etc/pacman.d/mirrorlist&quot;, O_RDONLY) = 4
openat(AT_FDCWD, &quot;/etc/pacman.d/mirrorlist&quot;, O_RDONLY) = 4
openat(AT_FDCWD, &quot;/var/lib/pacman/local/&quot;, O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 3
openat(AT_FDCWD, &quot;/var/lib/pacman/local/ALPM_DB_VERSION&quot;, O_RDONLY) = 4
openat(AT_FDCWD, &quot;/usr/share/locale/locale.alias&quot;, O_RDONLY|O_CLOEXEC) = 3
openat(AT_FDCWD, &quot;/usr/share/locale/en_US.utf8/LC_MESSAGES/libc.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en_US/LC_MESSAGES/libc.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en.utf8/LC_MESSAGES/libc.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en/LC_MESSAGES/libc.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/var/log/pacman.log&quot;, O_WRONLY|O_CREAT|O_APPEND|O_CLOEXEC, 0644) = 3
openat(AT_FDCWD, &quot;/etc/localtime&quot;, O_RDONLY|O_CLOEXEC) = 4
openat(AT_FDCWD, &quot;/usr/share/locale/en_US.utf8/LC_MESSAGES/pacman.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en_US/LC_MESSAGES/pacman.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en.utf8/LC_MESSAGES/pacman.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en/LC_MESSAGES/pacman.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
:: Synchronizing package databases...
openat(AT_FDCWD, &quot;/var/lib/pacman/db.lck&quot;, O_WRONLY|O_CREAT|O_EXCL|O_CLOEXEC, 000) = -1 EEXIST (File exists)
openat(AT_FDCWD, &quot;/usr/share/locale/en_US.utf8/LC_MESSAGES/libalpm.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en_US/LC_MESSAGES/libalpm.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en.utf8/LC_MESSAGES/libalpm.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, &quot;/usr/share/locale/en/LC_MESSAGES/libalpm.mo&quot;, O_RDONLY) = -1 ENOENT (No such file or directory)
error: failed to update core (unable to lock database)
openat(AT_FDCWD, &quot;/var/lib/pacman/db.lck&quot;, O_WRONLY|O_CREAT|O_EXCL|O_CLOEXEC, 000) = -1 EEXIST (File exists)
error: failed to update extra (unable to lock database)
openat(AT_FDCWD, &quot;/var/lib/pacman/db.lck&quot;, O_WRONLY|O_CREAT|O_EXCL|O_CLOEXEC, 000) = -1 EEXIST (File exists)
error: failed to update community (unable to lock database)
openat(AT_FDCWD, &quot;/var/lib/pacman/db.lck&quot;, O_WRONLY|O_CREAT|O_EXCL|O_CLOEXEC, 000) = -1 EEXIST (File exists)
error: failed to update multilib (unable to lock database)
openat(AT_FDCWD, &quot;/var/lib/pacman/db.lck&quot;, O_WRONLY|O_CREAT|O_EXCL|O_CLOEXEC, 000) = -1 EEXIST (File exists)
error: failed to update archlinuxcn (unable to lock database)
error: failed to synchronize all databases
+++ exited with 1 +++
#+end_src

可以看到，在输出 =:: Synchronizing package databases...= 后，pacman会去检查 =&quot;/var/lib/pacman/db.lck&quot;= 是否存在,然后跟着提示 =error: failed to update archlinuxcn (unable to lock database)=

所以很容易就能推测出，锁文件为 =/var/lib/pacman/db.lck=,跟网上搜索的内容一致。
</description>
<pubDate>2020-05-25</pubDate>
<guid>https://lujun9972.github.io/blog/2020/05/25/使用strace解决pacman提示无法锁定数据库的问题/index.html</guid>
</item>
<item>
<title>如何批量删除Linux mail中的Cron邮件</title>
<link>https://lujun9972.github.io/blog/2020/05/25/如何批量删除linux-mail中的cron邮件/index.html</link>
<description>我在 cron 中设置了每天定时运行 [[https://github.com/LCTT/TranslateProject][Linux中国]] 的选题脚本。然后由于cron会将任务的执行结果通过邮件通知用户，这样一来过了一段时间后我的 mail box 中就充满了 CRON 发来邮箱了。

看了网上的一些资料，我知道可以通过 =echo &#39;d *&#39;|mail= 来删除所有 mail box 中的邮件，但是这样会把非 CRON 的邮件也删掉，这不是我想要的。

好在翻阅了一下 =man mail= 发现 =d= 命令后面可以通过直接跟 =发件人地址= 或 =/关键字= 的方式删除指定发件人的邮件，或删除标题中包含 =关键字= 的邮件。

由于所有的 =CRON= 发送的邮件都以 =(Cron Daemon)= 作为发件人，因此可以通过 =echo &#39;&quot;(Cron Daemon)&quot;&#39;|mail= 来删除所有 CRON 发出的邮件（这里不要忘了括号外的双引号，因为 =()= 在指定邮件的语法中有特殊意义）

那么若我只是想删除某个 CRON 任务发送的邮件又该怎么办呢？ 
=CRON= 发送的邮件的标题格式一般都是这样的 =Cron &lt;主机名&gt; CRON命令=.
#+begin_src shell :dir /ssh:lujun9972@tencent_cloud.lujun9972.win#8022: :results org
    echo -n |mail
#+end_src

#+RESULTS:
#+begin_src org
Heirloom Mail version 12.5 7/5/10.  Type ? for help.
&quot;/var/spool/mail/lujun9972&quot;: 11 messages 10 unread
&gt;U  1 (Cron Daemon)         Mon May 25 15:03  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U  2 (Cron Daemon)         Mon May 25 15:04  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U  3 (Cron Daemon)         Mon May 25 15:05  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U  4 (Cron Daemon)         Mon May 25 15:06  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U  5 (Cron Daemon)         Mon May 25 15:07  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U  6 (Cron Daemon)         Mon May 25 15:08  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
    7 (Cron Daemon)         Mon May 25 15:09  26/965   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U  8 (Cron Daemon)         Mon May 25 15:10  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U  9 (Cron Daemon)         Mon May 25 15:11  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U 10 (Cron Daemon)         Mon May 25 15:12  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
 U 11 (Cron Daemon)         Mon May 25 15:13  26/964   &quot;Cron &lt;lujun9972@VM_0_8_centos&gt; date&quot;
Held 11 messages in /var/spool/mail/lujun9972
#+end_src

因此，我们可以通过 =echo &#39;d /命令关键字&#39;|mail= 来删除某个特定任务的邮件，比如下面命令删除 =date= 命令产生的邮件：
#+begin_src shell :dir /ssh:lujun9972@tencent_cloud.lujun9972.win#8022: :results org
    echo &#39;d /date&#39; |mail
    echo -n |mail
#+end_src

#+RESULTS:
#+begin_src org
  No mail for lujun9972
#+end_src

=mail= 命令中关于指定邮件的语法特别灵活，下面说明摘取自 =man mail=
#+begin_src shell  :dir /ssh:lujun9972@tencent_cloud.lujun9972.win#8022: :results org
    man mail |sed -n &#39;/Specifying messages/,/Replying to or originating mail/p&#39;
#+end_src

#+RESULTS:
#+begin_src org
   Specifying messages
       Commands  such  as print and delete can be given a list of message num‐
       bers as arguments to apply to a  number  of  messages  at  once.   Thus
       `delete  1 2&#39; deletes messages 1 and 2, while `delete 1-5&#39; deletes mes‐
       sages 1 through 5.  In sorted or threaded mode (see the sort and thread
       commands),  `delete  1-5&#39; deletes the messages that are located between
       (and including) messages 1 through 5 in the sorted/threaded  order,  as
       shown  in  the  header  summary.   The  following special message names
       exist:

       :n     All new messages.

       :o     All old messages (any not in state read or new).

       :u     All unread messages.

       :d     All deleted messages (for the undelete command).

       :r     All read messages.

       :f     All `flagged&#39; messages.

       :a     All answered messages (cf. the markanswered variable).

       :t     All messages marked as draft.

       :k     All `killed&#39; messages.

       :j     All messages classified as junk.

       .      The current message.

       ;      The message that was previously the current message.

       ,      The parent message of the current message, that is  the  message
              with  the  Message-ID  given  in the `In-Reply-To:&#39; field or the
              last entry of the `References:&#39; field of the current message.

       -      The next  previous  undeleted  message,  or  the  next  previous
              deleted  message  for  the undelete command.  In sorted/threaded
              mode, the next previous  such  message  in  the  sorted/threaded
              order.

       +      The  next undeleted message, or the next deleted message for the
              undelete command.  In sorted/threaded mode, the next  such  mes‐
              sage in the sorted/threaded order.

       ^      The  first  undeleted  message, or the first deleted message for
              the undelete command.  In sorted/threaded mode, the  first  such
              message in the sorted/threaded order.

       $      The  last message.  In sorted/threaded mode, the last message in
              the sorted/threaded order.

       &amp;x     In threaded mode, selects the message addressed with x, where  x
              is  any  other  message specification, and all messages from the
              thread that begins at it.  Otherwise, it is identical to x.   If
              x  is  omitted, the thread beginning with the current message is
              selected.

       ,*      All messages.

       `      All messages that were included in the message list for the pre‐
              vious command.

       /string
              All  messages  that  contain  string  in the subject field (case
              ignored).  See also the searchheaders variable.   If  string  is
              empty,  the  string from the previous specification of that type
              is used again.

       address
              All messages from address.  By default, this is a case-sensitive
              search  for  the complete email address.  If the allnet variable
              is set, only the local part of the addresses  is  evaluated  for
              the  comparison.   Otherwise  if the showname variable is set, a
              case-sensitive search for the complete real name of a sender  is
              performed.  The IMAP-style (from address) expression can be used
              instead if substring matches are desired.

       (criterion)
              All messages that satisfy the given IMAP-style SEARCH criterion.
              This addressing mode is available with all types of folders; for
              folders not located on IMAP servers, or for  servers  unable  to
              execute  the  SEARCH  command,  mailx  will  perform  the search
              locally.  Strings must be enclosed by double quotes `&quot;&#39; in their
              entirety  if they contain white space or parentheses; within the
              quotes, only backslash `\&#39; is recognized as an escape character.
              All  string searches are case-insensitive.  When the description
              indicates that the `envelope&#39; representation of an address field
              is  used,  this  means that the search string is checked against
              both a list constructed as

              (&quot;real name&quot; &quot;source-route&quot; &quot;local-part&quot; &quot;domain-part&quot;)

              for each address, and the addresses without real names from  the
              respective header field.  Criteria can be nested using parenthe‐
              ses.

       (criterion1 criterion2 ... criterionN)
              All messages that satisfy all of the given criteria.

       (or criterion1 criterion2)
              All messages that satisfy either criterion1  or  criterion2,  or
              both.  To connect more than two criteria using `or&#39;, (or) speci‐
              fications have to be nested  using  additional  parentheses,  as
              with  `(or a (or b c))&#39;;  `(or a b c)&#39;  means  ((a or b) and c).
              For a simple `or&#39; operation of independent criteria on the  low‐
              est  nesting level, it is possible to achieve similar effects by
              using three separate criteria, as with `(a) (b) (c)&#39;.

       (not criterion)
              All messages that do not satisfy criterion.

       (bcc string)
              All messages that contain string in the  `envelope&#39;  representa‐
              tion of the Bcc: field.

       (cc string)
              All  messages  that contain string in the `envelope&#39; representa‐
              tion of the Cc: field.

       (from string)
              All messages that contain string in the  `envelope&#39;  representa‐
              tion of the From: field.

       (subject string)
              All messages that contain string in the Subject: field.

       (to string)
              All  messages  that contain string in the `envelope&#39; representa‐
              tion of the To: field.

       (header name string)
              All messages that contain string in the specified Name: field.

       (body string)
              All messages that contain string in their body.

       (text string)
              All messages that contain string in their header or body.

       (larger size)
              All messages that are larger than size (in bytes).

       (smaller size)
              All messages that are smaller than size (in bytes).

       (before date)
              All messages that were received before date; date must be in the
              form d[d]-mon-yyyy, where d[d] is the day of the month as one or
              two digits, mon is the name of the month—one  of  `Jan&#39;,  `Feb&#39;,
              `Mar&#39;,  `Apr&#39;,  `May&#39;, `Jun&#39;, `Jul&#39;, `Aug&#39;, `Sep&#39;, `Oct&#39;, `Nov&#39;,
              or  `Dec&#39;,  and  yyyy  is  the  year  as   four   digits;   e.g.
              &quot;30-Aug-2004&quot;.

       (on date)
              All messages that were received on the specified date.

       (since date)
              All messages that were received since the specified date.

       (sentbefore date)
              All messages that were sent on the specified date.

       (senton date)
              All messages that were sent on the specified date.

       (sentsince date)
              All messages that were sent since the specified date.

       ()     The  same criterion as for the previous search.  This specifica‐
              tion cannot be used as part of another criterion.  If the previ‐
              ous  command line contained more than one independent criterion,
              the last of those criteria is used.

       A practical method to read a set of messages is to issue a from command
       with  the  search criteria first to check for appropriate messages, and
       to read each single message then by typing ``&#39; repeatedly.

   Replying to or originating mail
#+end_src
</description>
<pubDate>2020-05-25</pubDate>
<guid>https://lujun9972.github.io/blog/2020/05/25/如何批量删除linux-mail中的cron邮件/index.html</guid>
</item>
</channel>
</rss>