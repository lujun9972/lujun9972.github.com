#+TITLE: 如何查看glibc的版本
#+AUTHOR: lujun9972
#+TAGS: 编程之旅
#+DATE: [2019-05-05 日 15:44]
#+LANGUAGE:  zh-CN
#+STARTUP:  inlineimages
#+OPTIONS:  H:6 num:nil toc:t \n:nil ::t |:t ^:nil -:nil f:t *:t <:nil

找人家排查问题时经常需要说明当前系统是的glibc版本。

从 [[https://www.linuxquestions.org/questions/linux-software-2/how-to-check-glibc-version-263103/]] 中找到的:
#+BEGIN_EXAMPLE
  4.9.	How can I find out which version of glibc I am using in the moment?

  {UD} If you want to find out about the version from the command line simply
  run the libc binary.  This is probably not possible on all platforms but
  where it is simply locate the libc DSO and start it as an application.  On
  Linux like

    /lib/libc.so.6

  This will produce all the information you need.

  What always will work is to use the API glibc provides.  Compile and run the
  following little program to get the version information:

  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  #include <stdio.h>
  #include <gnu/libc-version.h>
  int main (void) { puts (gnu_get_libc_version ()); return 0; }
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  This interface can also obviously be used to perform tests at runtime if
  this should be necessary.
#+END_EXAMPLE

简单的说就是直接执行
#+BEGIN_SRC shell :results org
  /lib/libc.so.6
#+END_SRC

#+RESULTS:
#+BEGIN_SRC org
GNU C Library (GNU libc) stable release version 2.29.
Copyright (C) 2019 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.
Compiled by GNU CC version 8.2.1 20181127.
libc ABIs: UNIQUE IFUNC ABSOLUTE
For bug reporting instructions, please see:
<https://bugs.archlinux.org/>.
#+END_SRC

但这中方法并不保证一定能用，如果实在不行可以通过 =gnu_get_libc_version= 函数来获取
#+BEGIN_SRC C
  #include <stdio.h>
  #include <gnu/libc-version.h>
  int main (void)
  {
    puts (gnu_get_libc_version ());
    return 0;
  }
#+END_SRC

#+RESULTS:
: 2.29
